<?php
    $this->css(array(
        $this->assetModule('script/jquery.Jcrop.min.css')
    ));
    $this->jQuery();
    $this->js(array(
        $this->assetModule('script/ajax-upload-min.js'),
        $this->assetModule('script/jquery.Jcrop.min.js')
    ));
?>

<h2><?php echo $this->escape($title) ?></h2>

<style>
    #user-js-avatar-form,
    .user-avatar-source {
        margin-bottom: 20px;
    }
    .user-uploaded-box {
        border: 1px solid #e5e5e5;
        float: left;
        margin-right: 40px;
        width: 300px;
        height: 300px;
        overflow: hidden !important;
        *position: relative;
        *z-index: 10;
    }
    .user-upload-hit {
        text-align: center;
        margin-top: 120px;
    }
    .user-preview-box {
        border: 1px solid #dddddd;
        overflow: hidden;
    }
    img {
        max-width: none;
    }
</style>

<div class="user-avatar-source">
    <h4 class="page-header"><?php _e('Avatar source: ') ?></h4>
    <div>
        <input name="source" type="radio" value="upload" checked="checked"><?php _e('Upload images') ?>
        <input name="source" type="radio" value="gavatar"><?php _e('From Gavatar') ?>
        <input name="source" type="radio" value="repository" disabled="disabled"><?php _e('Select from repository') ?>
    </div>
</div>

<div id="user-js-avatar-form" class="span12">
    <div id="user-avatar-source-upload">
        <div class="user-uploaded-box">
            <div class="user-upload-hit">
                <input class="btn user-add-avatar" type="button" value="<?php _e('Upload') ?>" style="width: 110px;">
                <div class="muted" style="margin-top: 10px; font-size: 12px;">
                    <?php echo __('Format supported: ') . $this->escape($config['avatar_extension']) ?>
                    (<?php echo $config['max_size'] ?>MB)
                </div>
            </div>
            <img class="hide user-upload-image">
        </div>
    </div>
</div>

<div id="user-avatar-preview" class="span12">
    <h4 class="page-header"><?php _e('Avatar previews') ?></h4>
    <div class="preview-image span12">
    <?php
        foreach ($allSize as $name => $size) {
    ?>
        <div class="pull-left" style="width: <?php echo $this->escape($size) ?>px; margin-right: 20px">
            <div><?php echo $this->escape(ucfirst($name)) ?></div>
            <div class="user-preview-box" 
                 style="width: <?php echo $this->escape($size) ?>px; height: <?php echo $this->escape($size) ?>px">
                <img id="user-preview-<?php echo $this->escape($name) ?>" src="<?php
                   if (isset($avatar[$name]) and $avatar[$name]) {
                       echo Pi::url($avatar[$name]);
                   }
                ?>" style="width: <?php echo $this->escape($size) ?>">
            </div>
        </div>
    <?php
        }
    ?>
    </div>
    
    <button class="btn btn-primary hide js-btn" style="margin-right: 20px;" href="javascript:void(0)">
        <?php _e('Update') ?>
    </button>
    <a class="hide js-btn" id="user-avatar-cancel" style="cursor: pointer"><?php _e('Cancel') ?></a>
</div>

<script>
    var jcrop_api;
    var page = {
        id: function() {
            return "<?php echo 'fake_id/' . $form->get('fake_id')->getValue() ?>";
        },
        sizes: function() {
            var sizeStr = '<?php echo implode(',', array_keys($allSize)) ?>';
            var data    = new Array();
            data = sizeStr.split(',');
            
            return data;
        },
        sizeValue: function() {
            var sizeStr = '<?php echo implode(',', $allSize) ?>';
            var data    = new Array();
            data = sizeStr.split(',');
            
            return data;
        },
        format: function() {
            var format = '<?php echo $this->escape($config['avatar_extension']) ?>';
            var data   = new Array();
            data = format.split(',');
            return data;
        },
        el: $('#user-js-avatar-form'),
        $: function(selector) {
            return  this.el.find(selector);      
        },
        init: function() {
            var self = this;
            this.uploadImg = this.$('.user-upload-image');
            var sizes = page.sizes();
            this.preImg = new Array();
            for (var i = 0; i < sizes.length; i++) {
                this.preImg[i] = $('#user-preview-' + sizes[i]);
            }
            this.updateBtn = $('.js-btn');
            this.updateBtn.click(this.cancelAvatar.bind(this));
            //this.$('.btn-primary').click(this.savePhoto.bind(this));
            this.ajaxUpload();
        },
        ajaxUpload: function() {
            new ajaxUpload($('.user-add-avatar'), {
                action: '<?php echo $this->url('default', array(
                    'controller' => 'avatar',
                    'action'     => 'upload'
                )) ?>' + page.id(),
                format: page.format(),
                name: 'upload',
                json: true,
                start: function() {
                    page.$('.user-add-avatar').val('<?php _e('In process ...') ?>');
                },
                done: function(res) {
                    if (res.status) {
                        page.$('.user-upload-hit').remove();
                        $('[target=ajaxUploadIframe]').remove();
                        page.initJcrop(res.data);
                    } else {
                        alert(res.message);
                        page.$('.user-add-avatar').val('<?php _e('Upload') ?>');
                    }
                },
                fail: function() {
                    alert('<?php _e('Error occured, please try again!') ?>');
                    page.$('.user-add-avatar').val('<?php _e('Upload') ?>');
                }
            });
        },
        initJcrop: function(res) {
            var url = res['preview_url'],
                boundx = 0,
                boundy = 0;
            var preImg = this.preImg;
            this.result = res;
            this.updateBtn.removeClass('hide');
            this.uploadImg.removeClass('hide').attr('src', url);
            var sizes = page.sizes();
            for (var i = 0; i < sizes.length; i++) {
                this.preImg[i].attr('src', url);
            }
            jcrop_api && jcrop_api.destroy();
            if (res.w > res.h) {
                boundx = 300;
            } else {
                boundy = 300;
            }
            if (boundx) {
                boundy = 300 * res.h / res.w;
                this.uploadImg.css({
                    width: 300,
                    height: boundy
                });
            } else {
                boundx = 300 * res.w / res.h;
                this.uploadImg.css({
                    width: boundx,
                    height: 300
                });
            }
            this.uploadImg.Jcrop({
                aspectRatio: 1,
                bgOpacity: .5,
                onChange: function(c) {
                    var rx = new Array();
                    var ry = new Array();
                    var sizeValue = page.sizeValue();
                    for (var j = 0; j < sizeValue.length; j++) {
                        rx[j] = sizeValue[j] / c.w;
                        ry[j] = sizeValue[j] / c.h;
                    }
                    var r = Math.round;
                    
                    var sizes = page.sizes();
                    for (var k = 0; k < sizes.length; k++) {
                        preImg[k].css({
                            'width'      : r(rx[k] * boundx),
                            'height'     : r(ry[k] * boundy),
                            'marginLeft' : r(-rx[k] * c.x),
                            'marginTop'  : r(-ry[k] * c.y)
                        });
                    }
                }
            }, function() {
                jcrop_api = this;
                var h = this.ui.holder;
                h.css({
                    left: (300 - h.outerWidth()) /2,
                    top: (300 - h.outerHeight()) /2     
                });
                this.setSelect([40,40,200,200]);
            });
        },
        savePhoto: function(e) {
            e.preventDefault();
            var d = jcrop_api.tellScaled(),
                ret = this.result.w > this.result.h ? this.result.w / 300 : this.result.h / 300;
            this.$('.btn-primary').attr('disabled', 'disabled');
            for (var i in d) {
                if (d.hasOwnProperty(i)) {
                    d[i] = Math.round(d[i] * ret);
                }
            }
            d['avatar'] = this.result.file;
            $.post('<?php echo $this->url('default',array('action' => 'add')); ?>', d).done(function(res) {
                res = $.parseJSON(res);
                if (res.status) {
                    window.location.reload();
                } 
            });
        },
        cancelAvatar    : function() {
            var source = $('input[name="source"]').val();
            if ('upload' == source) {
                var url = '<?php echo $this->url('', array(
                    'controller'   => 'avatar',
                    'action'       => 'remove',
                    'fake_id'      => $form->get('fake_id')->getValue(),
                )) ?>';
                $.get(url, function(result) {
                    result = $.parseJSON(result);
                    if (result.status) {
                        window.location.reload();
                    } else {
                        alert(result.message);
                    }
                });
            }
        }
    }
    page.init();
</script>