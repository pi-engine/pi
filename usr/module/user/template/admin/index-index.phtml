<div ng-controller="MainCtrl" ng-app="userListModule">
    <ul class="nav nav-tabs">
        <li ng-class="navClass('/index')">
            <a href="#!index">
                <?php _e('All');?>
            </a>
        </li>
        <li ng-class="navClass('/active')">
            <a href="#!active">
                <?php _e('Activated');?>
            </a>
        </li>
        <li ng-class="navClass('/pengding')">
            <a href="#!pengding">
                <?php _e('Pending'); ?>
            </a>
        </li>
        <li ng-class="navClass('/new')">
            <a href="#!new">
                <?php _e('Add new'); ?>
            </a>
        </li>
        <li class="<?php echo $action == 'search' ? 'active' : ''; ?>">
            <a href="<?php echo $this->url('', array('controller' => 'index', 'action' => '#search')); ?>">
                <?php _e('Advanced search'); ?>
            </a>
        </li>
    </ul>
    <div ng-view></div>
</div>

<script src="<?php echo $this->assetModule('script/angular.js'); ?>"></script>
<script src="<?php echo $this->assetModule('script/angular-route.js'); ?>"></script>
<script>
angular.extend(angular, {
    'isFile': function(obj) {
        return Object.prototype.toString.apply(obj) === '[object File]';
    }
});
var userListModule = angular.module('userListModule', ['ngRoute']);
var userListModuleConfig = {
    urlRoot: '<?php echo $this->url('', array('controller' => 'index', 'action' => 'var')); ?>'.replace(/var\/?$/, ''),
    assetRoot: '<?php echo $this->assetModule('template/admin/'); ?>'
};
userListModule.config(function($routeProvider, $locationProvider) {
    $locationProvider.hashPrefix('!');
    $routeProvider.when('/index', {
        templateUrl: userListModuleConfig.assetRoot + 'index-index.html',
        controller: 'IndexCtr'
    }).when('/active', {
        templateUrl: userListModuleConfig.assetRoot + 'index-active.html',
        controller: 'ActiveCtr'
    }).when('/pengding', {
        templateUrl: userListModuleConfig.assetRoot + 'index-pengding.html',
        controller: 'PendingCtr'
    }).when('/new', {
        templateUrl: userListModuleConfig.assetRoot + 'index-new.html',
        controller: 'NewCtr'
    }).otherwise({
        redirectTo: '/index'
    });
});
userListModule.service('shared', function($http) {
    var urlRoot = userListModuleConfig.urlRoot;
    var shared = {
        parse: function(data) {
            var users = data.users;
            for (var i = 0, l = users.length; i < l; i++) {
                users[i].time_disabled *= 1000;
                users[i].time_created *= 1000;
                users[i].time_activated *= 1000;
                users[i].checked = 0;
                users[i].active = parseInt(users[i].active, 10);
            }
        },
        clearAlert: function() {
            this.alert = null;
        },
        deleteAction: function(idx) {
            if (!confirm(data.confirm)) return;
            var users = this.users
            var user = users[idx];
            $http.post(urlRoot + 'deleteUser', {
                ids: user.id 
            }).success(function(data) {
                this.alert = data;
                if (data.status) {
                    users.splice(idx, 1);
                }
            });
        },
        deleteBatchAction: function() {
            if (!confirm(data.confirm)) return;
            var ids = [];
            angular.forEach(users, function(user) {
                if (user.checked) ids.push(user.id);
            });

            $http.post(urlRoot + 'deleteUser', {
                ids: ids
            }).success(function(data) {
                var ret = [];
                this.alert = data;
                if (data.status) {
                    angular.forEach(users, function(user) {
                        if (!user.checked) ret.push(user);
                    });
                    this.users = users = ret;
                }
            });
        },
        enableAction: function(user) {
            $http.post(urlRoot + 'enable', {
                ids: user.id 
            }).success(function(data) {
                this.alert = data;
                if (data.status) {
                    user.time_disabled = 0;
                    if (user.time_activated) user.active = 1;
                }
            });
        },
        enableBatchAction: function() {
            var ids = [];
            var success = function(data) {
                this.alert = data;
                this.allChecked = 0;
                if (data.status) {
                    angular.forEach(users, function(user) {
                        if (user.checked) {
                            user.time_disabled = 0;
                            if (user.time_activated) user.active = 1;
                            user.checked = 0;
                        }
                    });
                }
            };
            angular.forEach(users, function(user) {
                if (user.checked) {
                    if (user.time_disabled) {
                        ids.push(user.id);
                    } else {
                        user.checked = 0;
                    }
                }
            });
            $http.post(urlRoot + 'enable', {
                ids: ids.join(',')
            }).success(angular.bind(this, success));
        },
        disableAction: function(user) {
            console.log(this);
            var success = function (data) {
                this.alert = data;
                if (data.status) {
                    user.time_disabled = 1;
                    user.active = 0;
                }
            };
            $http.post(urlRoot + 'disable', {
                ids: user.id 
            }).success(angular.bind(this, success));
        },
        disbaleBatchAction: function() {
            var ids = [];
            angular.forEach(users, function(user) {
                if (user.checked) {
                    if (user.time_disabled) {
                        user.checked = 0;
                    } else {
                        ids.push(user.id);
                    }
                }
            });
            $http.post(urlRoot + 'disable', {
                ids: ids.join(',')
            }).success(function(data) {
                this.alert = data;
                this.allChecked = 0;
                if (data.status) {
                    angular.forEach(users, function(user) {
                        if (user.checked) {
                            user.time_disabled = 1;
                            user.active = 0;
                            user.checked = 0;
                        }
                    });
                }
            });
        },
        markAll: function(checked) {
            angular.forEach(this.users, function(user) {
                user.checked = checked;
            });
        }
    };
    return shared;
}).controller('MainCtrl', function($scope, $location, $http) {
    //post form data not json data
    $http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $http.defaults.transformRequest = [function(d) {
        return angular.isObject(d) && !angular.isFile(d) ? $.param(d) : d;
    }];
    $scope.navClass = function(path) {
         if ($location.path().substr(0, path.length) == path) {
          return "active"
        } else {
          return ""
        }
    };
}).controller('IndexCtr', function($scope, $http, shared) {
    angular.extend($scope, shared);
    $http.get(userListModuleConfig.urlRoot + 'all')
         .success(function(data) {
            $scope.parse(data);
            angular.extend($scope, data);
         });

}).controller('NewCtr', function() {

});



userListModule.controller('userListCtr', function($scope, $http, $location) {
    /*$scope.navClass = function(action) {
        if (!action) return 'active';
        console.log(action);
        if ($location.hash() == action) return 'active';
        return '';
    };*/




    var data = $injector.get('data');
    var search = $location.search();
    var urlRoot = $injector.get('urlRoot');

    angular.extend($scope, search);
    angular.extend($scope, data);

    var users = $scope.users;


    
    //handler php data to js

    $scope.clearAlert = function() {
        $scope.alert = null;
    };
    $scope.markAll = function(checked) {
        angular.forEach(users, function(user) {
            user.checked = checked;
        });
    };



    $scope.activeAction = function(user) {
        var ids = getIds(user);
        $http.post(urlRoot + 'active', {
            ids: ids
        }).success(function(data) {
            $scope.alert = data;
            if (data.status) {
                user.time_activated = 1;
                if (!user.time_disabled) user.active = 1;
            }
        });
    };
    $scope.roleAction = function(user, section) {
        var data = {
            uid: user.id,
            section: section
        };
        if (section == 'front') {
            data.role = user.front_role;
        } else {
            data.role = user.admin_role;
        }
        $http.post(urlRoot + 'setRole', data);
    }
    $scope.searchAction = function() {
        var ret = ['active', 'enable', 'front_role', 'admin_role', 'register_date', 'search'];
        var search = {};
        for (var i = 0, l = ret.length; i < l; i++) {
            if ($scope[ret[i]]) {
                search[ret[i]] = $scope[ret[i]];
            }
        }
        location.search = $.param(search);
    };
});


function testCtr($scope, $routeParams, $route) {
}
</script>
