<?php
$this->css($this->assetModule('script/admin.css'));
$this->jQuery('ui/jquery-ui-1.10.3.custom.js');
$this->angular(array(
    'angular-route.js',
    'angular-translate.js',
    'pi-pagination.js'
));

?>
<div ng-controller="MainCtrl" ng-app="userPluginModule">
    <ul class="nav nav-tabs">
        <li ng-class="navClass('/timeline')">
            <a href="#!timeline">
                <?php _e('Timeline'); ?>
            </a>
        </li>
        <li ng-class="navClass('/activity')">
            <a href="#!activity">
                <?php _e('Activity'); ?>
            </a>
        </li>
        <li ng-class="navClass('/quicklink')">
            <a href="#!quicklink">
                <?php _e('Quicklink'); ?>
            </a>
        </li>
    </ul>
    <div ng-view></div>
</div>

<script>
var userPluginModule = angular.module('userPluginModule', ['ngRoute', 'pagination', 'pascalprecht.translate']);
var userPluginModuleConfig = {
    urlRoot: '<?php echo $this->url('', array('controller' => 'plugin')); ?>',
    assetRoot: '<?php echo $this->assetModule('ng-template/admin/', '', true, false); ?>',
    t: {
        ITEM_NAME: '<?php _e('Item name'); ?>',
        FROM: '<?php _e('From module'); ?>',
        DISPLAY: '<?php _e('Display'); ?>',
        TITLE: '<?php _e('Items displayed on the homepage timeline'); ?>',
        ACTIVITIES: '<?php _e('Activities'); ?>',
        ACTIVITIES_REPOSITORY: '<?php _e('Activities items repository'); ?>',
        ACTIVITIES_DESC: '<?php _e("Items to display on the user\'s homepage, Drag items vertically to determine the order displays"); ?>',
        QUICKLINK: '<?php _e('Quicklinks'); ?>',
        QUICKLINK_REPOSITORY: '<?php _e('Quicklinks items repository'); ?>'
    }
};
</script>
<script>
userPluginModule.config(function($translateProvider) {
    $translateProvider.translations(userPluginModuleConfig.t);
});
userPluginModule.config(function($routeProvider, $locationProvider) {
    $locationProvider.hashPrefix('!');
    $routeProvider.when('/activity', {
        templateUrl: userPluginModuleConfig.assetRoot + 'plugin-activity.html',
        controller: 'SortableCtrl'
    }).when('/quicklink', {
        templateUrl: userPluginModuleConfig.assetRoot + 'plugin-quicklink.html',
        controller: 'SortableCtrl'
    }).otherwise({
        redirectTo: '/timeline',
        templateUrl: userPluginModuleConfig.assetRoot + 'plugin-timeline.html',
        controller: 'TimelineCtrl'
    });
}).service('server', function($http) {
    var isFile = function(obj) {
        return Object.prototype.toString.apply(obj) === '[object File]';
    };
    var urlRoot = userPluginModuleConfig.urlRoot;
    //emulate jQuery post
    $http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $http.defaults.transformRequest = [function(d) {console.log(d);
        return angular.isObject(d) && !isFile(d) ? $.param(d) : d;
    }];
    this.timeline = {
        get: function(page) {
            return $http.get(urlRoot + 'timeline', {
                params: {
                    p: page || 1
                }
            }); 
       },
       put: function(item) {
            return $http.post(urlRoot + 'toggleTimelineDisplay', {
                id: item.id
            });
       }
    };
    this.quicklink = {
        get: function() {
            return $http.get(urlRoot + 'quicklink');
        },
        put: function(ids) {
            return $http.post(urlRoot + 'dressUpQuicklink', {
                ids: ids
            });
        }
    };
    this.activity = {
        get: function() {
            return $http.get(urlRoot + 'activity');
        },
        put: function(ids) {
            return $http.post(urlRoot + 'dressUpActivity', {
                ids: ids
            });
        }
    };
}).controller('MainCtrl', function($scope, $location) {
    $scope.navClass = function(path) {
         if ($location.path().substr(0, path.length) == path) {
          return "active";
        } else {
          return "";
        }
    };
}).controller('TimelineCtrl', function($scope, server) {
    $scope.paginator = { page: 1 };
    $scope.$watch('paginator.page', function(page) {
        console.log(page);
        server.timeline.get(page).success(function(data) {
            $scope.timeline = data.timeline;
            $scope.paginator = data.paginator;
        });
    });
    $scope.disableAction = function(item) {
        if (!item.active) return;
        server.timeline.put(item).success(function(data) {
            if (data.status) {
                item.active = 0;
            } else {
                item.active = 1;
            }
        });
    };
    $scope.activeAction = function(item) {
        if (item.active) return;
        server.timeline.put(item).success(function(data) {
            if (data.status) {
                item.active = 1;
            } else {
                item.active = 0;
            }
        });
    };
}).controller('SortableCtrl', function($scope, $location, server) {
    var action = $location.path().replace(/^\//, '');
    server[action].get().success(function(data) {
        $scope.displayList = data.display_list;
        $scope.selectList = data.select_list;
    });
    function getDisplay() {
        var ids = [];
        var list = $scope.displayList;
        angular.forEach(list, function(item) {
            ids.push(item.id);
        });
        ids = ids.join(',');
        return ids;
    }
    $scope.removeDisplay = function(idx) {
        var item = $scope.displayList[idx];
        $scope.displayList.splice(idx, 1);
        $scope.selectList.push(item);
        server[action].put(getDisplay());
    };
    $scope.addDisplay = function(idx) {
        var item = $scope.selectList[idx];
        $scope.selectList.splice(idx, 1);
        $scope.displayList.push(item);
        server.quicklink.put(getDisplay());
    };
    $('#js-plugin-sortable').sortable({
        start: function(e, ui) {
            ui.item.data('start', ui.item.index());
            ui
            .helper
            .outerWidth(ui.item.outerWidth());
        },
        update: function(e, ui) {
            var start = ui.item.data('start');
            var end = ui.item.index();
            var list = $scope.displayList;
            list.splice(end, 0, 
                list.splice(start, 1)[0]);
            $scope.$apply();
            server[action].put(getDisplay());
        }
    });
});
</script>