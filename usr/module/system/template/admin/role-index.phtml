<?php
$this->css($this->assetModule('script/system-ui.css'));
$this->jQuery();
$this->backbone();
$this->js($this->assetModule('script/system-msg.js', 'system'));
?>


<div class="page-role">
    <ul class="nav nav-tabs">
        <li<?php if ('front' == $type) { ?> class="active"<?php } ?>><a href="<?php echo $this->url('', array('controller' => 'role', 'action' => 'index', 'type' => 'front')); ?>" title="<?php _e('User roles'); ?>"><?php _e('User roles'); ?></a>
        <li<?php if ('admin' == $type) { ?> class="active"<?php } ?>><a href="<?php echo $this->url('', array('controller' => 'role', 'action' => 'index', 'type' => 'admin')); ?>" title="<?php _e('Admin roles'); ?>"><?php _e('Admin roles'); ?></a>
    </ul>
    <div class="role-ident">
        <i class="icon-check"></i><span><?php _e('Directly inherited'); ?></span>
        <i class="icon-check icon-indirectly"></i><span><?php _e('Indirectly inherited'); ?></span>
        <i class="icon-check-empty"></i><span><?php _e('click for horizontal inherited vertical'); ?></span>
    </div>
    <div id="js-role">

    </div>
</div>
<script id="temp-role" type="text/template">
<table class="table">
    <thead>
        <th>
            <span class="btn js-new-role" data-toggle="modal" data-target="#js-role-modal"><?php _e('Add role'); ?></span>
        </th>
        <% _.each(data, function(item) { %>
        <th>
            <div class="ellipsis role-table-title"><%= item.title %></div>
        </th>
        <% }); %>
    </thead>
    <tbody>
        <% _.each(data, function(item) { %>
        <tr data-id="<%= item.id %>" data-name="<%= item.name %>">
            <th>
                <div class="role-rename" id="js-role-<%= item.name %>">
                    <div class="ellipsis role-table-title"><%= item.title %></div>
                    <input type="text" class="input-small js-input-rename" value="<%= item.title %>" data-text="<%= item.title %>"/>
                </div>
                
                <div class="row-actions">
                <% if (parseInt(item.custom)) { %>
                <a class="link js-rename" href="javascript:void(0)" data-target="#js-role-<%= item.name %>"><?php _e('Rename'); ?></a>    
                <a class="link js-delete" href="javascript:void(0)"><?php _e('Delete'); ?></a>
                <% } %>
                </div>
            </th>
            <% _.each(_.range(data.length), function(i) { %>
            <td>
               <% if (_.contains(item.inherit.direct, data[i].name)) { %>
               <i class="icon-check js-check" data-name="<%= data[i].name %>"></i>
               <% } else if (_.contains(item.inherit.indirect, data[i].name)) { %>
               <i class="icon-check icon-indirectly"></i>
               <% } else if (!_.contains(data[i].inherit.all, item.name) && item.name != data[i].name) {  %>
               <i class="icon-check-empty js-check" data-action="inherit" data-name="<%= data[i].name %>"></i>
               <% } %>
            </td>
            <% }); %>
        </tr>
        <% }); %>
    </tbody>
</table>
</script>
<script>

    var RoleListView = Backbone.View.extend({
        el: $('#js-role'),
        events:{
             'click .js-new-role': 'addRole',
             'click .js-check': 'inheritOrCancle',
             'click .js-delete': 'deleteRole',
             'click .js-rename': 'renameShow',
             'blur .js-input-rename': 'renameAction'
        },
        initialize: function() {
            this.render();
            this.roleModal = $("<div>", {"class": "modal hide fade"}).appendTo(document.body);
            this.collection.on('add', this.render, this);
            this.collection.on('remove', this.render, this);
            this.collection.on('reset', this.render, this);
        },
        render: function() {
            this.$el.html(_.template($("#temp-role").html(), this.collection.toJSON(), {variable: 'data'}));
        },
        addRole: function() {
           $.get('<?php echo $this->url('', array('action' => 'add', 'type' => $type)); ?>').done(_.bind(function(res) {
                this.roleModal.html(res).modal("show");
                formModule.success = this.submitAddRole.bind(this);
           }, this));
        },
        submitAddRole: function(res) {
           if (res.status) {
              this.collection.add(res.data);
              this.roleModal.modal('hide');
              systemMessage.succ(res.message);
           }
        },
        inheritOrCancle: function(e) {
            var tar = $(e.currentTarget),
                child = this.getRoleName(tar),
                parent = tar.attr("data-name"),
                add= tar.attr('data-action');
            $.post('<?php echo $this->url('', array('action' => 'inherit')); ?>',{
                add: add,
                child: child,
                parent: parent
            }).done(_.bind(function(res) {
                res = $.parseJSON(res);
                if (res.status) {
                    this.collection.reset(res.data);
                    systemMessage.succ(res.message);
                }
            }, this));
        },
        deleteRole: function(e) {
            var id = this.getRoleId($(e.currentTarget));
            $.getJSON('<?php echo $this->url('', array('action' => 'delete', 'id' => '')); ?>' + id).done(_.bind(function(res) {
                if (res.status) {
                    this.collection.remove(id);
                    systemMessage.succ(res.message);
                } else {
                    systemMessage.fail(res.message);
                }
           }, this));
        },
        getRoleId: function(tar) {
            return tar.parents('tr').attr('data-id');
        },
        getRoleName: function(tar) {
            return tar.parents('tr').attr('data-name');
        },
        renameShow: function(e) {
            $($(e.currentTarget).attr('data-target')).toggleClass('role-rename-show');
        },
        renameAction: function(e) {
            var tar = $(e.currentTarget),
                p = tar.parent(),
                v = $.trim(tar.val()),
                id = this.getRoleId(tar),
                prev = tar.attr('data-text');
            if (v) {
               this.collection.get(id).set('title', v);
               this.render();
               $.post('<?php echo $this->url('', array('action' => 'rename', 'id' => '')); ?>'+id, {
                   title: v
               }).error(_.bind(function() {
                   systemMessage.fail("<?php _e('An error occurred, please try again later.'); ?>");
                   this.collection.get(id).set('title', prev);
                   this.render();
               }, this));
            } else {
                tar.val(prev);
                p.removeClass('role-rename-show');
            }
        }
    });
    var roleList = new RoleListView({
        collection: $roles = new Backbone.Collection(<?php echo json_encode($roles); ?>)
    });

</script>