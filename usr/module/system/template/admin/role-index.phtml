<?php
    $this->css($this->assetModule('script/system-ui.css'));
?>
<div ng-view ng-app="systemRoleModule"></div>
<?php $angular = Pi::url('static/vendor/angular/'); ?>
<script src="<?php echo $angular . 'angular.js'; ?> "></script>
<script src="<?php echo $angular . 'angular-route.js'; ?> "></script>
<script src="<?php echo $angular . 'angular-translate.js'; ?> "></script>
<script>
var systemRoleModule = angular.module('systemRoleModule', ['ngRoute', 'pascalprecht.translate']);
var systemRoleModuleConfig = {
    urlRoot: '<?php echo $this->url('', array('controller' => 'role')); ?>',
    assetRoot: '<?php echo $this->assetModule('ng-template/admin/'); ?>',
    t: {
        ADMIN_TITLE: '<?php _e('Admin roles'); ?>',
        ADMIN_ADD: '<?php _e('Add admin role'); ?>',
        FRONT_TITLE: '<?php _e('Front roles'); ?>',
        FRONT_ADD: '<?php _e('Add front role'); ?>',
        DELETE: '<?php _e('Delete'); ?>',
        EDIT: '<?php _e('Edit'); ?>',
        NAME: '<?php _e('Name'); ?>',
        TITLE: '<?php _e('Title'); ?>',
        USER_COUNT: '<?php _e('User in role'); ?>',
        STATUS: '<?php _e('Status'); ?>',
        ACTIVE: '<?php _e('Active'); ?>',
        INACTIVE: '<?php _e('Inactive'); ?>',
        ACTION: '<?php _e('Action'); ?>',
        ROLE_NAME: '<?php _e('role name'); ?>',
        ROLE_TITLE: '<?php _e('role title'); ?>',
        SUBMIT: '<?php _e('submit'); ?>',
        CANCEL: '<?php _e('cancel'); ?>'
    }
}
</script>
<script>
systemRoleModule.config(function($translateProvider, $routeProvider) {
    $translateProvider.translations(systemRoleModuleConfig.t);
    $routeProvider.otherwise({
        templateUrl: systemRoleModuleConfig.assetRoot + 'role-index.html',
        controller: 'RoleCtrl'
    });
}).service('server', function($http) {
    var root = systemRoleModuleConfig.urlRoot;
    var isFile = function(obj) {
        return Object.prototype.toString.apply(obj) === '[object File]';
    };
    //emulate jQuery post
    $http.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $http.defaults.transformRequest = [function(d) {
        return angular.isObject(d) && !isFile(d) ? $.param(d) : d;
    }];
    this.get = function() {
        return $http.get(root + 'list');
    }
    this.add = function(type) {
        type = type || 'front';
        return $http.post(root + 'add', {
            section: type
        });
    };
    this.putTitle = function(role) {
        $http.post(root + 'rename', {
            id: role.id,
            title: role.title
        });
    };
}).controller('RoleCtrl', function($scope, server) {
    server.get().success(function(data) {
        var frontRoles = data.frontRoles;
        var adminRoles = data.adminRoles;
        var parse = function(item) {
            item.editTitle = 0;
            item.originTitle = item.title;
        };
        angular.forEach(frontRoles, parse);
        angular.forEach(frontRoles, parse);
        $scope.frontRoles = data.frontRoles;
        $scope.adminRoles = data.adminRoles;
    });
    $scope.addRoleAction = function(type) {
        var role = {
            type: type
        };
        if (type == 'front') {
            $scope.addFrontRole = {
                active: 1
            };
        } else {
            $scope.adminRoles.push(role);
        }

    };
    $scope.renameAction = function(role) {
        if (role.title == '') {
            role.title = role.originTitle;
        }
        if (role.title != role.originTitle) {
            server.putTitle(role);
        }
        role.editTitle = 0;
    };
});
</script>